package com.lmh.android.multithreaddownloader;

import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;

public class MainActivity extends Activity {
	private Button start;
	private Button pause;
	private ProgressBar pb;
	private Handler handler;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		start = (Button) findViewById(R.id.button_start);
		pause = (Button) findViewById(R.id.button_pause);
		pb = (ProgressBar) findViewById(R.id.progress_bar);
		start.setOnClickListener(new ChangeStateListener());
		pause.setOnClickListener(new ChangeStateListener());
		pb.setMax(100);//Set the range of the progress bar to 0...max.
		pb.setProgress(0);//Set the current progress to the specified value. Does not do anything if the progress bar is in indeterminate mode.
		
	}
	
	private class ChangeStateListener implements View.OnClickListener {

		@Override
		public void onClick(View v) {
			new Thread(new ProgressHandler(v)).start();
		}
	}
	
	private class ProgressHandler implements Runnable {
		private View v;
		
		public ProgressHandler (View v) {
			this.v = v;
		}
		@Override
		public void run() {
			Message msg = Message.obtain();
			switch(v.getId()) {
			case R.id.button_start:
				start.setEnabled(false);
				pause.setEnabled(true);
				break;
			case R.id.button_pause:
				start.setEnabled(true);
				pause.setEnabled(false);
				break;
			}
			
			
			try {
				Thread.sleep(100);
				int pro = pb.getProgress();
				pb.setProgress(pro >= 100 ? pro : (pro + 1));
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		
	}
	
	private class UIHandler extends Handler {

		@Override
		public void handleMessage(Message msg) {
			msg.getData().getInt("progress");
		}
		
	}
	

}
